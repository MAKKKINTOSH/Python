import telebot
from functions import DeadDb
from config import Token
from telebot import types

bot=telebot.TeleBot(Token)
DB=DeadDb('deadline_data_base.db')



edit_access = 0
ObjectType = ''
DeadlineDate = ''

def main():

    @bot.message_handler(commands=['start'])
    def Hello(message):

        ReKeyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)            #<strike>–°–ê–°–£</strike>
        ReKeyboard.add('–ú–µ–Ω—é')
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>, —è - –±–æ—Ç —Ç–≤–æ–µ–π –ª—é–±–∏–º–æ–π –≥—Ä—É–ø–ø—ã <b>–ê–°–£–±-22-1</b>, —á–µ—Ä–µ–∑ –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ –±–ª–∏–∂–∞–π—à–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã\n\n<u>–í–∞–∂–Ω–æ</u>\n –∫–Ω–æ–ø–∫–∞ —Å–Ω–∏–∑—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–±—è –≤ –Ω–∞—á–∞–ª–æ, –Ω–µ –±–æ–π—Å—è –µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫ \n\nP.S. <i>–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —á—Ç–æ-—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –±–æ—Ç —É–ø–∞–ª –∏ –Ω–µ —Ö–æ—á–µ—Ç –≤—Å—Ç–∞–≤–∞—Ç—å, –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —á–µ–ª–æ–≤–µ–∫—É –ø–æ —Å—Å—ã–ª–∫–µ</i>\n\n https://t.me/Van_Vanskiy', reply_markup=ReKeyboard, parse_mode='html')
    @bot.message_handler(regexp='–ú–µ–Ω—é')
    def Menu(message):

        #print(message.chat.id, message.from_user.first_name, message.from_user.last_name)
        #DELETE ON RELEASE

        DB.auto_delete_deadline()

        InKeyboard=types.InlineKeyboardMarkup(row_width=2)
        but1 = types.InlineKeyboardButton("–±–ª–∏–∂–∞–π—à–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã", callback_data='Know')
        but2 = types.InlineKeyboardButton("–ë–ª–∏–∂–∞–π—à–∏–µ 5 –¥–µ–¥–ª–∞–π–Ω–æ–≤", callback_data='Know_five')
        but3 = types.InlineKeyboardButton("‚úè–î–æ–±–∞–≤–∏—Ç—å‚úè", callback_data='Edit')
        but4 = types.InlineKeyboardButton("‚úÇ–£–¥–∞–ª–∏—Ç—å‚úÇ", callback_data='Delete')
        InKeyboard.add(but1, but2)
        if (message.chat.id==545762112 or message.chat.id==958029367 or message.chat.id==1960549912 or message.chat.id==1340299205): InKeyboard.add(but3, but4)

        bot.send_message(message.chat.id, f"–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å", reply_markup=InKeyboard)

        @bot.callback_query_handler(func=lambda call:True)
        def Choise(call):
            print("***", call.data, "***")

            CallData = ['InProf', 'Nosyreva', 'English', 'Informatics', 'Math', 'BBC', 'Prog', 'Physics', 'PE']
            global edit_access, ObjectType, DeadlineDate

            InKeyboard = types.InlineKeyboardMarkup(row_width=2)                                    #object_id
            but1 = types.InlineKeyboardButton('–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ü–î', callback_data='InProf')                        #1
            but2 = types.InlineKeyboardButton('–î–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', callback_data='Nosyreva')    #2
            but3 = types.InlineKeyboardButton('–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫', callback_data='English')          #3
            but4 = types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', callback_data='Informatics')           #4
            but5 = types.InlineKeyboardButton('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', callback_data='Math')                   #5
            but6 = types.InlineKeyboardButton('–û–î–ö', callback_data='BBC')                           #6
            but7 = types.InlineKeyboardButton('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data='Prog')             #7
            but8 = types.InlineKeyboardButton('–§–∏–∑–∏–∫–∞', callback_data='Physics')                    #8
            but9 = types.InlineKeyboardButton('–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞', callback_data='PE')                    #9
            but10 = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='ToMenu')
            InKeyboard.add(but1, but2, but3, but4, but5, but6, but7, but8, but9, but10)

            InKeyboardType = types.InlineKeyboardMarkup(row_width=3)
            but11 = types.InlineKeyboardButton('–î/–ó', callback_data='0')
            but12 = types.InlineKeyboardButton('–õ/–†', callback_data='1')
            InKeyboardType.add(but11, but12, but10)

            EndKeyboardMarkup = types.InlineKeyboardMarkup(row_width=1)
            but21 = types.InlineKeyboardButton('–í –Ω–∞—á–∞–ª–æ', callback_data='ToStart')
            EndKeyboardMarkup.add(but21)

            if call.data=="Know":

                edit_access=0
                bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç', call.from_user.id, message_id=call.message.message_id)
                bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=InKeyboard)

            if call.data=="Know_five":

                bot.edit_message_text(f"–ë–ª–∏–∂–∞–π—à–∏–µ 5 –¥–µ–¥–ª–∞–π–Ω–æ–≤\n"
                                      f"1. {DB.show_n_deadline(1)}\n"
                                      f"2. {DB.show_n_deadline(2)}\n"
                                      f"3. {DB.show_n_deadline(3)}\n"
                                      f"4. {DB.show_n_deadline(4)}\n"
                                      f"5. {DB.show_n_deadline(5)}\n", call.from_user.id, message_id=call.message.message_id)
                #bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=EndKeyboardMarkup )

            if call.data=="Edit":

                edit_access=1
                bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç', call.from_user.id, message_id=call.message.message_id)
                bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=InKeyboard)

            if call.data=="Delete":

                edit_access=2
                bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç', call.from_user.id, message_id=call.message.message_id)
                bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=InKeyboard)

            if call.data == 'ToMenu':

                bot.delete_message(call.from_user.id, message_id=call.message.message_id)
                Menu(call.message)

            if call.data in CallData:
                ObjectType = call.data
                if edit_access == 1:
                    bot.edit_message_text('–î/–ó –∏–ª–∏ –õ/–†', call.from_user.id, message_id=call.message.message_id)
                    bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=InKeyboardType)
                if edit_access == 0:
                    #print(DB.show_deadline(ObjectType, 0))     #DELETE ON RELEASE
                    #print(DB.show_deadline(ObjectType, 1))     #DELETE ON RELEASE
                    bot.edit_message_text(text=f"–ë–ª–∏–∂–∞–π—à–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã\n{DB.object(ObjectType)}\n–î/–ó: {DB.show_deadline(ObjectType, 0)}\n–õ/–†: {DB.show_deadline(ObjectType, 1)}", message_id=call.message.message_id, chat_id=call.from_user.id, parse_mode='HTML')
                    #bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=EndKeyboardMarkup )
                if edit_access == 2:
                    bot.edit_message_text(f"<i>{DB.object(ObjectType)}</i>\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–¥–ª–∞–π–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å\n<b><u>‚ùó‚ùó‚ùó–ê–•–¢–£–ù–ì‚ùó‚ùó‚ùó, –æ—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–ª—å–∑—è</u></b>\n\n<i>–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ —É–¥–∞–ª—è—Ç—å, –≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–æ –Ω–µ –Ω–æ–º–µ—Ä –¥–µ–¥–ª–∞–π–Ω–∞</i>\n\n{DB.show_all_deadline(ObjectType)}", message_id=call.message.message_id, chat_id=call.from_user.id, parse_mode='html')
                    @bot.message_handler(content_types=['text'])
                    def delete_number(message):
                        n = message.text
                        try:
                            DB.delete_deadline(ObjectType, int(n))
                            bot.send_message(message.chat.id, "‚úÖ–û—Ç–ª–∏—á–Ω–æ, –¥–µ–¥–ª–∞–π–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω‚úÖ")
                        except: bot.send_message(message.chat.id, "üö´–û—à–∏–±–∫–∞, –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –Ω–æ–º–µ—Äüö´")
                        finally:
                            print(edit_access, ObjectType, message.text)
                            Menu(message)

            if call.data == '1' or call.data == '0':
                bot.send_message(call.from_user.id, f'{DB.object(ObjectType)}\n{"–î/–ó" if call.data == "0" else "–õ/–†"}\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥\n\n<i>–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª, –≤–≤–µ–¥–∏ —á—Ç–æ-—É–≥–æ–¥–Ω–æ, –Ω–æ –Ω–µ –¥–∞—Ç—É</i>', parse_mode='html')
                @bot.message_handler(content_types=['text'])
                def make(message):
                    a = message.text
                    try:
                        DeadlineDate = a[6] + a[7] + a[8] + a[9] + '-' + a[3] + a[4] + '-' + a[0] + a[1]
                        DB.make_deadline(ObjectType, int(call.data), DeadlineDate)
                        bot.send_message(message.chat.id, "‚úÖ–û—Ç–ª–∏—á–Ω–æ, –¥–µ–¥–ª–∞–π–Ω —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω‚úÖ")
                    except: bot.send_message(message.chat.id, "üö´–û—à–∏–±–∫–∞, –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –¥–∞—Ç—Éüö´")
                    finally:
                        print(edit_access, call.data, message.text)
                        Menu(message)
                    #bot.edit_message_reply_markup(call.from_user.id, message_id=call.message.message_id, reply_markup=EndKeyboardMarkup )

            #if call.data == "ToStart":
               #Menu(message)


main()

bot.polling(long_polling_timeout=30)            #bot.polling(non_stop=True)

